{"version":3,"sources":["components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","Dialog","props","className","style","dialog","active","to","id","name","Message","message","text","Textarea","Element","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","required","Dialogs","dialogsElements","dialogs","map","key","messagesElements","messages","dialogsContainer","formData","sendMessage","compose","connect","messagesPage","dialogsData","messagesData","newPostText","newMessageText","dispatch","sendMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,oBCA3DD,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,QAAU,yBAAyB,SAAW,4B,yICGjHC,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,S,oECQNE,EATA,SAACC,GACd,OACE,yBAAKC,UAAWC,IAAMC,OAAS,IAAMD,IAAME,QACzC,kBAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,IAAjC,IAAuCN,EAAMO,KAA7C,O,oCCISC,EARC,SAACR,GACf,OACE,yBAAKC,UAAWC,IAAMO,SACnBT,EAAMU,OCEPC,EAAWC,YAAQ,YACnBC,EAAeC,YAAiB,KAgChCC,EAAsBC,YAAU,CACpCC,KAAM,cADoBD,EATL,SAAChB,GACtB,OACE,0BAAMkB,SAAUlB,EAAMmB,cACpB,kBAACC,EAAA,EAAD,CAAOC,UAAWV,EAAUJ,KAAK,UAAUe,SAAU,CAACC,IAAUV,KAChE,4CASSW,EAlCC,SAACxB,GACf,IAAIyB,EAAkBzB,EAAM0B,QAAQC,KAAI,SAAAxB,GAAM,OAAI,kBAAC,EAAD,CAAQI,KAAMJ,EAAOI,KAAMD,GAAIH,EAAOG,GAAIsB,IAAKzB,EAAOG,QACpGuB,EAAmB7B,EAAM8B,SAASH,KAAI,SAAAlB,GAAO,OAAI,kBAAC,EAAD,CAASC,KAAMD,EAAQA,QAASmB,IAAKnB,EAAQH,QAMlG,OACE,yBAAKL,UAAWC,IAAM6B,kBACpB,yBAAK9B,UAAWC,IAAMwB,SACnBD,GAEH,yBAAKxB,UAAWC,IAAM4B,UACnBD,GAEH,kBAACd,EAAD,CAAqBG,SAZL,SAACc,GACnBhC,EAAMiC,YAAYD,EAASvB,cCOhByB,4BACbC,mBAhBsB,SAACvC,GACvB,MAAO,CACL8B,QAAS9B,EAAMwC,aAAaC,YAC5BP,SAAUlC,EAAMwC,aAAaE,aAC7BC,YAAa3C,EAAMwC,aAAaI,mBAGT,SAACC,GAC1B,MAAO,CACLR,YAAa,SAACxB,GACZgC,EAASC,YAAyBjC,UJVR,SAACkC,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAK7C,MAAMH,OACT,kBAAC8C,EAAcE,KAAK7C,OADI,kBAAC,IAAD,CAAUK,GAAG,eAHH,GACbyC,IAAMH,WAQtC,OAFqCR,kBAAQxC,EAARwC,CAAoCS,KIQ5DV,CAGbV","file":"static/js/6.a52c68d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1323i\",\"active\":\"Dialog_active__2fc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__3xYxC\",\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"messages\":\"Dialogs_messages__1w_Up\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to=\"/login\"/>\n      return <Component {...this.props}/>\n    }\n  }\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n}\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport style from './Dialog.module.css';\n\nconst Dialog = (props) => {\n  return (\n    <div className={style.dialog + ' ' + style.active}>\n      <NavLink to={\"/dialogs/\" + props.id}> {props.name} </NavLink>\n    </div>\n\n  );\n}\n\nexport default Dialog;\n","import React from 'react';\nimport style from './Message.module.css';\n\nconst Message = (props) => {\n  return (\n    <div className={style.message}>\n      {props.text}\n    </div>\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\nimport { Element } from '../common/FormsControls/FormsControls';\nimport Dialog from './Dialog/Dialog';\nimport style from './Dialogs.module.css';\nimport Message from './Message/Message';\n\nconst Textarea = Element(\"textarea\");\nconst maxLength100 = maxLengthCreator(100);\n\nconst Dialogs = (props) => {\n  let dialogsElements = props.dialogs.map(dialog => <Dialog name={dialog.name} id={dialog.id} key={dialog.id}/>);\n  let messagesElements = props.messages.map(message => <Message text={message.message} key={message.id}/>);\n\n  let onSendMessage = (formData) => { \n    props.sendMessage(formData.message);\n  }\n\n  return (\n    <div className={style.dialogsContainer}>\n      <div className={style.dialogs}>\n        {dialogsElements}\n      </div>\n      <div className={style.messages}>\n        {messagesElements}\n      </div>\n      <AddMessageReduxForm onSubmit={onSendMessage}/>\n    </div>\n  );\n}\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field component={Textarea} name=\"message\" validate={[required, maxLength100]}/>\n      <button>Send</button>\n    </form>\n  )\n}\n\nconst AddMessageReduxForm = reduxForm({\n  form: 'addMessage'\n})(AddMessageForm)\n\nexport default Dialogs;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { sendMessageActionCreator } from './../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\n\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogs: state.messagesPage.dialogsData,\n    messages: state.messagesPage.messagesData,\n    newPostText: state.messagesPage.newMessageText\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (message) => {\n      dispatch(sendMessageActionCreator(message));\n    }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}