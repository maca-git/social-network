{"version":3,"sources":["api/api.js","utils/objects-helpers.js","redux/users-reducer.js","components/Navbar/Friends/Friend/Friend.module.css","assets/images/preloader.svg","components/Navbar/Navbar.module.css","serviceWorker.js","redux/auth-reducer.js","redux/navbar-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Navbar/Friends/Friends.module.css","components/Header/Header.module.css","redux/profile-reducer.js","components/common/FormsControls/FormsControls.jsx","components/common/Preloader/Preloader.js","redux/dialogs-reducer.js"],"names":["instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","res","data","unfollow","id","delete","follow","post","auth","profileAPI","getProfile","userId","getStatus","updateStatus","status","put","authAPI","login","email","password","rememberMe","logout","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","initialState","usersData","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","a","response","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","bind","usersReducer","state","action","followed","filter","module","exports","Boolean","window","location","hostname","match","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","friendsData","name","avatar","navbarReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","messagesPage","dialogReducer","navbarState","usersPage","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","props","className","style","navbar","to","activeClassName","active","Header","header","onClick","HeaderContainer","this","React","Component","connect","Input","Element","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","component","placeholder","validate","required","styles","formError","massage","messages","length","stopSubmit","_error","formData","UsersContainer","lazy","DialogsContainer","ProfileContainer","Settings","News","Music","App","initializeApp","Suspense","fallback","Preloader","path","render","Login","AppContainer","promise","Promise","all","MainApp","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","value","maxLengthCreator","maxLength","ADD_POST","postsData","profile","addPostActionCreator","setUserStatus","getUserProfile","getUserStatus","updateUserStatus","postId","input","meta","hasError","touched","formControl","src","preloader","alt","dialogsData","messagesData","newMessageText","sendMessageActionCreator"],"mappings":"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","file":"static/js/main.96829aef.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: { \n    \"api-key\": \"ef667c3a-04cf-47c8-bb11-3913cb6c41de\" \n  } \n})\n\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 5) {\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n      .then(res => res.data)\n  },\n  unfollow(id) {\n    return instance.delete(`follow/${id}`)\n      .then(res => res.data)\n  },\n  follow(id) {\n    return instance.post(`follow/${id}`)\n      .then(res => res.data)\n  },\n  auth() {\n    return instance.get(`auth/me`)\n      .then(res => res.data)\n  }\n}\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/${userId}`)\n      .then(res => res.data)\n  },\n  getStatus(userId) {\n    return instance.get(`profile/status/${userId}`)\n      .then(res => res.data)\n  },\n  updateStatus(status) {\n    return instance.put(`profile/status`, {status: status})\n      .then(res => res.data)\n  }\n}\n\nexport const authAPI = {\n  auth() {\n    return instance.get(`auth/me`)\n      .then(res => res.data)\n  },\n  login( email, password, rememberMe = false) {\n    return instance.post(`auth/login`, { email, password, rememberMe})\n      .then(res => res.data)\n  },\n  logout() {\n    return instance.delete(`auth/login`)\n      .then(res => res.data)\n  }\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n  return items.map(u => {\n    if (u[objPropName] === itemId) {\n      return { ...u, ...newObjProps }\n    }\n    return u;\n  })\n} ","import { usersAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/objects-helpers\";\n\nconst FOLLOW = 'users/FOLLOW';\nconst UNFOLLOW = 'users/UNFOLLOW';\nconst SET_USERS = 'users/SET_USERS';\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n  usersData: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, \"id\", { followed: true })\n      }\n    case UNFOLLOW:\n      return {\n        ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, \"id\", { followed: false })\n      }\n\n    case SET_USERS:\n      return {\n        ...state,\n        usersData: action.usersData\n      }\n\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage\n      }\n    case SET_TOTAL_USERS_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.totalUsersCount\n      }\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.followingInProgress\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter(id => id !== action.userId)\n      }\n\n    default:\n      return state;\n  }\n}\n\n// ACTIONS CREATOR\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\nexport const setUsers = (usersData) => ({ type: SET_USERS, usersData })\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount })\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\nexport const toggleFollowingProgress = (followingInProgress, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress, userId })\n\n// THUNK\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\n  dispatch(toggleIsFetching(true));\n  dispatch(setCurrentPage(page));\n  const response = await usersAPI.getUsers(page, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setUsers(response.items));\n  dispatch(setTotalUsersCount(response.totalCount));\n}\n\nconst followUnfollowFlow = async (dispatch, apiMethod, actionCreator, userId) => {\n  dispatch(toggleFollowingProgress(true, userId));\n\n  const response = await apiMethod(userId);\n  if (response.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (id) => async (dispatch) => {\n  followUnfollowFlow(dispatch, usersAPI.follow.bind(usersAPI), followSuccess, id);\n}\n\nexport const unfollow = (id) => async (dispatch) => {\n  followUnfollowFlow(dispatch, usersAPI.unfollow.bind(usersAPI), unfollowSuccess, id);\n}\n\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__19z3Q\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.c88c5042.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__CLYHD\",\"active\":\"Navbar_active__3mbhk\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../api/api\";\n\n\nconst SET_AUTH_USER_DATA = 'auth/SET_USER_DATA';\n\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_AUTH_USER_DATA:\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_AUTH_USER_DATA, payload: { userId, email, login, isAuth } })\n\nexport const getAuthUserData = () => async (dispatch) => {\n  const response = await authAPI.auth();\n  if (response.resultCode === 0) {\n    const { id, email, login } = response.data;\n    dispatch(setAuthUserData(id, email, login, true));\n  }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n  const response = await authAPI.login(email, password, rememberMe);\n  if (response.resultCode === 0) {\n    dispatch(getAuthUserData());\n  } else {\n    const massage = response.messages.length > 0 ? response.messages[0] : \"Some error\";\n    dispatch(stopSubmit('login', { _error: massage }));\n  }\n}\n\nexport const logout = () => async (dispatch) => {\n  const response = await authAPI.logout();\n  if (response.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n}\n\nexport default authReducer;","let initialState = {\n  friendsData: [\n    { id: 1, name: \"Anna\", avatar: \"https://fiverr-res.cloudinary.com/images/q_auto,f_auto/gigs/128771571/original/c540edc5830213c6de3243d97061c3f12cdc2d3b/design-a-digital-icon-of-your-roblox-character.png\"},\n    { id: 2, name: \"Ivan\", avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRuCwcYJIQnwXyQcyN8DdYfM0UDCUd_gprKEQ&usqp=CAU\"},\n    { id: 3, name: \"Igor\", avatar: \"https://pm1.narvii.com/6544/9e5275d11654e09a0786ea750c4c9f64ccee5a58_hq.jpg\"}\n  ]\n};\n\nexport const navbarReducer = (state = initialState, action) => {\n  return state;\n}\n\nexport default navbarReducer;\n","import { getAuthUserData } from './../redux/auth-reducer';\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n  initialized:  false,\n}\n\nconst appReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true\n      }\n\n    default: \n      return state;\n  }\n}\n\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\n\nexport const initializeApp = () => {\n  return (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise]).then(() => {\n      dispatch(initializedSuccess());\n    })\n  }\n}\n\nexport default appReducer;","import thunkMiddleware from \"redux-thunk\";\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport authReducer from \"./auth-reducer\";\nimport dialogReducer from \"./dialogs-reducer\";\nimport navbarReducer from \"./navbar-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport appReducer from \"./app-reducer\";\nimport { reducer as formReducer } from 'redux-form';\n\nlet reducers = combineReducers({\n  profilePage: profileReducer,\n  messagesPage: dialogReducer,\n  navbarState: navbarReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: appReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet store = createStore(reducers, composeEnhancers(\n  applyMiddleware(thunkMiddleware)\n));\n\n\nexport default store;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Friends from './Friends/Friends';\nimport style from './Navbar.module.css';\n\nconst Navbar = (props) => {\n  return (\n    <div className={style.navbar}>\n      <ul>\n        <li>\n          <NavLink to=\"/profile\" activeClassName={style.active}>Profile</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/dialogs\" activeClassName={style.active}>Messages</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/users\" activeClassName={style.active}>Users</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/news\" activeClassName={style.active}>News</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/music\" activeClassName={style.active}>Music</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/settings\" activeClassName={style.active}>Settings</NavLink>\n        </li>\n      </ul>\n      {/* <Friends friendsData={props.state.friendsData}/> */}\n    </div>\n  )\n}\n\nexport default Navbar;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport style from './Header.module.css';\n\nconst Header = (props) => {\n  return (\n    <div className={style.header}>\n      logo\n      <div className={style.login}>\n        {\n          props.isAuth \n          ? <div> {props.login} - <button onClick={props.logout}>Log out</button></div>\n          : <NavLink to={'/login'}>Login</NavLink>}\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport { logout } from './../../redux/auth-reducer';\n\n\nclass HeaderContainer extends React.Component {\n\n  render() {\n    return (\n      <Header {...this.props} />\n    )\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login\n})\n\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport { connect } from 'react-redux';\nimport Field from 'redux-form/lib/Field';\nimport reduxForm from 'redux-form/lib/reduxForm';\nimport { required } from '../../utils/validators/validators';\nimport { Element } from '../common/FormsControls/FormsControls';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport styles from \"./../common/FormsControls/FormsControls.module.css\";\n\nconst Input = Element(\"input\");\n\nconst LoginForm = ({handleSubmit, error}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field component={Input} name={\"email\"} placeholder={\"email\"} validate={[required]}/>\n      </div>\n      <div>\n        <Field component={Input} name={\"password\"} type={\"password\"} placeholder={\"Password\"} validate={[required]}/>\n      </div>\n      <div>\n        <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\n      </div>\n      {\n        error && \n        <div className={styles.formError}>\n          {error}\n        </div>\n      }\n      \n      <div>\n        <button>Login</button>\n      </div>\n    </form>\n  );\n}\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm)\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  }\n  if(props.isAuth) {\n    return <Redirect to={\"/profile\"}/>\n  }\n  return (\n    <div>\n      <h1>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport store from './redux/redux-store';\nimport Navbar from './components/Navbar/Navbar';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport Preloader from './components/common/Preloader/Preloader';\nimport { initializeApp } from './redux/app-reducer';\nimport { connect, Provider } from 'react-redux';\nimport { compose } from 'redux';\n\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\n\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    const renderProfile = () => <ProfileContainer/>\n    const renderDialogs = () => <DialogsContainer/>\n    const renderUsers = () => <UsersContainer/>\n\n    return (\n        <div className=\"app\">\n          <HeaderContainer />\n          <Navbar/>\n          {/* <Navbar state={props.state.navbarState}/> */}\n          <div className=\"content\">\n            <React.Suspense fallback={<Preloader />}>\n              <Route path='/profile/:userId?' render={renderProfile} />\n              <Route path='/dialogs' render={renderDialogs} />\n              <Route path='/users' render={renderUsers} />\n              <Route path='/music' component={Music} />\n              <Route path='/news' component={News} />\n              <Route path='/settings' component={Settings} />\n              <Route path='/login' component={Login} />\n            </React.Suspense>\n          </div>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nconst AppContainer = compose(connect(mapStateToProps, {initializeApp}))(App);\n\nconst MainApp = (props) => {\n  return (\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer/>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>\n  )\n}\n\nexport default MainApp;","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainApp from './App';\n\nReactDOM.render(<MainApp/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formError\":\"FormsControls_formError__1XsRY\"};","export const required = value => {\n  if (value) return undefined;\n  return 'Field is required';\n}\nexport const maxLengthCreator = (maxLength) => value => {\n  if (value.length < maxLength) return undefined;\n  return `Max length is ${maxLength} symbols`;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1-Zf7\",\"friendsContainer\":\"Friends_friendsContainer__3nnAA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"login\":\"Header_login__3V3Qa\"};","import { profileAPI } from \"../api/api\";\n\nconst ADD_POST = 'profile/ADD-POST';\nconst DELETE_POST = 'profile/DELETE_POST';\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\nconst SET_USER_STATUS = 'profile/SET_USER_STATUS';\n\nlet initialState = {\n  postsData: [\n    { id: 1, message: \"Hi, how are you?\" },\n    { id: 2, message: \"Its my fists post!\" },\n  ],\n  profile: null,\n  status: ''\n}\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return {\n        ...state,\n        postsData: [...state.postsData, { id: 3, message: action.post }]\n      }\n    case DELETE_POST:\n      return {\n        ...state,\n        postsData: state.postsData.filter(post => post.id !== action.postId)\n      }\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.profile\n      }\n    case SET_USER_STATUS:\n      return {\n        ...state,\n        status: action.status\n      }\n    default:\n      return state;\n  }\n}\n\n\nexport const addPostActionCreator = (post) => ({ type: ADD_POST, post })\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\n\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, status })\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n  const response = await profileAPI.getProfile(userId);\n  dispatch(setUserProfile(response));\n}\n\nexport const getUserStatus = (status) => async (dispatch) => {\n  const response = await profileAPI.getStatus(status);\n  dispatch(setUserStatus(response));\n}\n\nexport const updateUserStatus = (status) => async (dispatch) => {\n  const response = await profileAPI.updateStatus(status);\n  if (response.resultCode === 0) {\n    dispatch(setUserStatus(status));\n  }\n}\n\nexport default profileReducer;","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\n\nexport const Element = Element => ({ input, meta, ...props }) => {\n  const hasError = meta.touched && meta.error;\n  return (\n    <div className={ styles.formControl + \" \" + (hasError ? styles.error : \"\") }>\n      <Element {...input} {...props} />\n      { hasError && <span> { meta.error } </span> }\n    </div>\n  );\n};","import React from 'react';\nimport preloader from \"./../../../assets/images/preloader.svg\";\n\n\nlet Preloader = (props) => {\n  return <div>\n      <img src={preloader} alt=\"preloader\"/>\n    </div>\n}\n\nexport default Preloader;","const ADD_MESSAGE = 'ADD-MESSAGE';\n\nlet initialState = {\n  dialogsData: [\n    { id: 1, name: \"Dimich\" },\n    { id: 2, name: \"Alexey\" },\n    { id: 3, name: \"Igor\" },\n    { id: 4, name: \"Sergey\" },\n  ],\n  messagesData: [\n    { id: 1, message: \"Hello!\" },\n    { id: 2, message: \"Yo!\" },\n  ],\n  newMessageText: ''\n}\n\nconst dialogReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case ADD_MESSAGE: \n      return {\n        ...state,\n        messagesData: [...state.messagesData, {id: 3, message: action.message}]\n      }\n    default:\n      return state;\n  }\n}\n\nexport const sendMessageActionCreator = (message) => ({ type: ADD_MESSAGE, message })\n\nexport default dialogReducer;"],"sourceRoot":""}